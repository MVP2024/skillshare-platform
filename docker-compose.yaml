version: '3.10'

services:
  redis:
    image: redis:8.2.1
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  db:
    image: postgres:17.0
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: .
    command: sh -c "python manage.py migrate --noinput && python -Xutf8 manage.py loaddata users/fixtures/groups.json && python -Xutf8 manage.py load_initial_data && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - media_data:/app/media
    ports:
      - "8001:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  celery_worker:
    build: .
    command: celery -A skillshare_platform worker -l info -E -P solo
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - backend
    restart: unless-stopped

  celery_beat:
    build: .
    command: celery -A skillshare_platform beat -l info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  media_data:
